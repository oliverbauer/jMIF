dependencies {
    implementation project(':jmif-core')
    implementation 'com.github.vlsi.mxgraph:jgraphx:4.1.0'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'commons-io:commons-io:2.7'
    implementation 'com.sun.activation:javax.activation:1.2.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'
    implementation 'org.imgscalr:imgscalr-lib:4.2'
    testImplementation 'junit:junit:4.13'
}

jar {
  manifest {
    attributes 'Main-Class': 'io.github.jmif.gui.swing.JMIF'
  }
  baseName = project.name + '-all'
  from { 
    configurations.runtime.collect {
      it.isDirectory() ? it : zipTree(it)
    }
    configurations.compile.collect { 
      it.isDirectory() ? it : zipTree(it) 
    } 
  }
}

task uberJar(type: Jar) {

    archivesBaseName = project.name + '-all'
    manifest {
        attributes(
                'Main-Class': 'io.github.jmif.gui.swing.JMIF'
        )
    }

    from sourceSets.main.output
    from configurations.runtimeClasspath.
            findAll { it.name.endsWith('jar') }.
            collect { zipTree(it) }
}
